# Whether to enable debug mode
debug: false

# What modules to load when plugin is enabled
classpath:
  jars:
    # @plugins/BukkitBackdoor/ by default
    folders:
      # All jars in ../../libraries
      - ../../libraries
    singles:
      # this = BukkitBackdoor.jar
      - this
      # - ./spark.jar
  customs: []

# What classes to import when plugin is enabled
imports:
  - org.bukkit.Bukkit
  - org.bukkit.Server
  - com.balugaq.bukkitbackdoor.api.code.BackdoorConstants
  - org.bukkit.entity.Player
  - org.bukkit.block.Block
  - org.bukkit.Location
  - org.bukkit.World
  - org.bukkit.FluidCollisionMode
  - jdk.jshell.JShell
  - com.balugaq.bukkitbackdoor.implementation.BukkitBackdoorPlugin
  - java.util.List
  - java.util.Map
  - java.util.Set
  - java.util.HashMap
  - java.util.HashSet
  - java.util.regex.Pattern
  - java.util.regex.Matcher
  - java.util.Collection
  - java.util.Collections
  - com.google.common.base.Preconditions
  - com.balugaq.bukkitbackdoor.api.code.CodeParser
  - com.balugaq.bukkitbackdoor.api.code.Code
  - com.balugaq.bukkitbackdoor.api.code.CustomLoaderDelegate
  - com.balugaq.bukkitbackdoor.api.code.Settings
  - com.balugaq.bukkitbackdoor.core.listeners.ChatListener
  - com.balugaq.bukkitbackdoor.core.listeners.DefaultConfig
  - com.balugaq.bukkitbackdoor.utils.Superhead
  - org.bukkit.scheduler.BukkitScheduler
  - org.bukkit.Material
  - org.bukkit.material.MaterialData
  - org.bukkit.inventory.Recipe
  - org.bukkit.configuration.file.YamlConfiguration
  - java.io.File
  - java.nio.file.Files
  - java.nio.file.Path
  - java.nio.file.Paths
  - java.lang.Class
  - java.lang.Runnable
  - java.lang.Thread
  - java.util.function.Consumer
  - java.util.function.Function
  - java.util.function.Supplier
  - com.balugaq.bukkitbackdoor.api.objects.Pair
  - com.balugaq.bukkitbackdoor.utils.ReflectionUtils
  - java.lang.reflect.Field
  - java.lang.reflect.Method
  - java.lang.reflect.Constructor
  - java.lang.invoke.MethodHandle
  - java.lang.invoke.MethodHandles
  - java.lang.invoke.VarHandle
  - org.bukkit.inventory.meta.ItemMeta
  - org.bukkit.enchantments.Enchantment
  - org.bukkit.Color
  - org.bukkit.inventory.meta.Damageable
  - org.bukkit.inventory.ItemFactory
  - org.bukkit.inventory.ItemStack
  - com.balugaq.bukkitbackdoor.utils.Logger
  - com.balugaq.bukkitbackdoor.utils.FileUtils
  - com.balugaq.bukkitbackdoor.api.objects.enums.CommandEnum

# Simplified macro definitions
# Variables definition:
#     varName=varValue
# ex:
#     server=Bukkit.getServer()
#
# Function definition:
#     funcName=funcQuote
# ex:
#     alias=DefaultConfig.addAlias
aliases:
  - server=Bukkit.getServer()
  - BC=BackdoorConstants
  - bcget=BC.getObject
  - player=((Player) bcget(\"player\"))
  - loc=player.getLocation()
  - block=loc.getBlock()
  - world=loc.getWorld()
  - lookingBlock=player.getTargetExact(16, FluidCollisionMode.NEVER)
  - shell=((JShell) bcget(\"jShell\"))
  - plugin=BukkitBackdoorPlugin.getInstance()
  - alias=DefaultConfig.addAlias
  - async=Bukkit.getScheduler()
  - pluginManager=Bukkit.getPluginManager()
  - sout=System.out.println
  - slot0=((ItemStack) bcget(\"slot0\"))
  - slot1=((ItemStack) bcget(\"slot1\"))
  - slot2=((ItemStack) bcget(\"slot2\"))
  - slot3=((ItemStack) bcget(\"slot3\"))
  - slot4=((ItemStack) bcget(\"slot4\"))
  - slot5=((ItemStack) bcget(\"slot5\"))
  - slot6=((ItemStack) bcget(\"slot6\"))
  - slot7=((ItemStack) bcget(\"slot7\"))
  - slot8=((ItemStack) bcget(\"slot8\"))
  - slot9=((ItemStack) bcget(\"slot9\"))
  - slot10=((ItemStack) bcget(\"slot10\"))
  - slot11=((ItemStack) bcget(\"slot11\"))
  - slot12=((ItemStack) bcget(\"slot12\"))
  - slot13=((ItemStack) bcget(\"slot13\"))
  - slot14=((ItemStack) bcget(\"slot14\"))
  - slot15=((ItemStack) bcget(\"slot15\"))
  - slot16=((ItemStack) bcget(\"slot16\"))
  - slot17=((ItemStack) bcget(\"slot17\"))
  - slot18=((ItemStack) bcget(\"slot18\"))
  - slot19=((ItemStack) bcget(\"slot19\"))
  - slot20=((ItemStack) bcget(\"slot20\"))
  - slot21=((ItemStack) bcget(\"slot21\"))
  - slot22=((ItemStack) bcget(\"slot22\"))
  - slot23=((ItemStack) bcget(\"slot23\"))
  - slot24=((ItemStack) bcget(\"slot24\"))
  - slot25=((ItemStack) bcget(\"slot25\"))
  - slot26=((ItemStack) bcget(\"slot26\"))
  - slot27=((ItemStack) bcget(\"slot27\"))
  - slot28=((ItemStack) bcget(\"slot28\"))
  - slot29=((ItemStack) bcget(\"slot29\"))
  - slot30=((ItemStack) bcget(\"slot30\"))
  - slot31=((ItemStack) bcget(\"slot31\"))
  - slot32=((ItemStack) bcget(\"slot32\"))
  - slot33=((ItemStack) bcget(\"slot33\"))
  - slot34=((ItemStack) bcget(\"slot34\"))
  - slot35=((ItemStack) bcget(\"slot35\"))
  - slot36=((ItemStack) bcget(\"slot36\"))
  - slot37=((ItemStack) bcget(\"slot37\"))
  - slot38=((ItemStack) bcget(\"slot38\"))
  - slot39=((ItemStack) bcget(\"slot39\"))
  - slot40=((ItemStack) bcget(\"slot40\"))
  - slot41=((ItemStack) bcget(\"slot41\"))
  - slot42=((ItemStack) bcget(\"slot42\"))
  - slot43=((ItemStack) bcget(\"slot43\"))
  - slot44=((ItemStack) bcget(\"slot44\"))
  - slot45=((ItemStack) bcget(\"slot45\"))
  - slot46=((ItemStack) bcget(\"slot46\"))
  - slot47=((ItemStack) bcget(\"slot47\"))
  - slot48=((ItemStack) bcget(\"slot48\"))
  - slot49=((ItemStack) bcget(\"slot49\"))
  - slot50=((ItemStack) bcget(\"slot50\"))
  - slot51=((ItemStack) bcget(\"slot51\"))
  - slot52=((ItemStack) bcget(\"slot52\"))
  - slot53=((ItemStack) bcget(\"slot53\"))
  - slot54=((ItemStack) bcget(\"slot54\"))
  - slot55=((ItemStack) bcget(\"slot55\"))
  - slot56=((ItemStack) bcget(\"slot56\"))
  - slot57=((ItemStack) bcget(\"slot57\"))
  - slot58=((ItemStack) bcget(\"slot58\"))
  - slot59=((ItemStack) bcget(\"slot59\"))
  - slot60=((ItemStack) bcget(\"slot60\"))
  - slot61=((ItemStack) bcget(\"slot61\"))
  - slot62=((ItemStack) bcget(\"slot62\"))
  - slot63=((ItemStack) bcget(\"slot63\"))
  - \=/

# What commands to execute in JShell when the plugin is enabled
commands: []

# What commands to execute in JShell when a command will be executed
pre-commit: []

# What commands to execute in JShell when a command was executed
post-commit: []
